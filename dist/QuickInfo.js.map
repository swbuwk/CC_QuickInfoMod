{"version":3,"file":"QuickInfo.js","mappings":"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","sources":["webpack:///./src/constants.ts","webpack:///./src/globalVariables.ts","webpack:///./src/handlers/info/createInfoBlock.ts","webpack:///./src/handlers/info/initInfoContainer.ts","webpack:///./src/handlers/settings/applySettings.ts","webpack:///./src/handlers/settings/createBooleanSettingsOption.ts","webpack:///./src/handlers/settings/createSliderSettingOption.ts","webpack:///./src/handlers/settings/index.ts","webpack:///./src/hooks/CheckGCSpawn.ts","webpack:///./src/hooks/ReplaceNativeHandlers.ts","webpack:///./src/hooks/UpdateBuffsTimerHook.ts","webpack:///./src/hooks/UpdateGCTimerHook.ts","webpack:///./src/utils/buff.ts","webpack:///./src/utils/colorInterpolate.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BUILDING_NAMES = exports.MULT_CLICK_IDS = exports.SHORT_BUFF_NAMES = exports.INFO_BLOCK_FONT_SIZE = exports.INFO_BLOCK_SIZE = exports.ICON_SIZE = exports.ICON_URL = void 0;\nexports.ICON_URL = \"http://cdn.dashnet.org/cookieclicker/beta/img/icons.png?v=2.052\";\nexports.ICON_SIZE = 18;\nexports.INFO_BLOCK_SIZE = 16;\nexports.INFO_BLOCK_FONT_SIZE = 12;\nexports.SHORT_BUFF_NAMES = {\n    \"frenzy\": \"F\",\n    \"click_frenzy\": \"CF\",\n    \"dragon_harvest\": \"DH\",\n    \"dragonflight\": \"DF\",\n    \"cursed_finger\": \"CuF\",\n    \"cookie_storm\": \"CS\",\n    \"blood_frenzy\": \"EF\"\n};\nexports.MULT_CLICK_IDS = [\n    \"click_frenzy\",\n    \"dragonflight\",\n    \"cursed_finger\"\n];\nexports.BUILDING_NAMES = [\n    \"Cursor\",\n    \"Grandma\",\n    \"Farm\",\n    \"Mine\",\n    \"Factory\",\n    \"Bank\",\n    \"Temple\",\n    \"Wizard Tower\",\n    \"Shipment\",\n    \"Alchemy Lab\",\n    \"Portal\",\n    \"Time Machine\",\n    \"Antim. Condenser\",\n    \"Prism\",\n    \"Chancemaker\",\n    \"Fractal engine\",\n    \"Javascript console\",\n    \"Idleverse\",\n    \"Cortex baker\",\n    \"You\"\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.settingsOptions = exports.settings = exports.globalVars = void 0;\nconst constants_1 = require(\"./constants\");\nexports.globalVars = {\n    buffTimers: [],\n    natGCOnScreen: false,\n    GCnoSpawnChance: 1\n};\nexports.settings = {\n    guiScale: 1,\n    updateFrequency: 10,\n    shortBuffNames: true,\n    showBuildingName: false,\n    hideOldBuffTImers: false,\n};\nexports.settingsOptions = [\n    {\n        id: \"guiScale\",\n        name: \"GUI Scale\",\n        type: \"slider\",\n        min: 0.5,\n        max: 2,\n        step: 0.1,\n        default: 1,\n        valueFormat: `x{val}`,\n        onChange: (val) => {\n            const QIContainer = l(\"QIContainer\");\n            if (!QIContainer)\n                return;\n            QIContainer.querySelectorAll(\"div\").forEach((div) => {\n                div.style.height = `${val * constants_1.INFO_BLOCK_SIZE}px`;\n                div.style.fontSize = `${val * constants_1.INFO_BLOCK_FONT_SIZE}px`;\n            });\n        }\n    },\n    {\n        id: \"updateFrequency\",\n        name: \"Update Frequency\",\n        type: \"slider\",\n        min: 1,\n        max: 100,\n        step: 1,\n        default: 10,\n        valueFormat: `every {val} ticks`\n    },\n    {\n        id: \"shortBuffNames\",\n        name: \"Short buff names\",\n        type: \"boolean\",\n        default: true,\n    },\n    {\n        id: \"showBuildingName\",\n        name: \"Show building names\",\n        type: \"boolean\",\n        default: false,\n    },\n    {\n        id: \"hideOldBuffTImers\",\n        name: \"Hide old buff timers\",\n        type: \"boolean\",\n        default: false,\n        onChange: (val) => {\n            const buffsEl = l(\"buffs\");\n            if (!buffsEl)\n                return;\n            buffsEl.style.display = val ? \"none\" : \"block\";\n        }\n    }\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createInfoBlock = void 0;\nconst constants_1 = require(\"../../constants\");\nconst globalVariables_1 = require(\"../../globalVariables\");\nconst createInfoBlock = (id) => {\n    const infoBlock = document.createElement(\"div\");\n    infoBlock.id = \"QI_\" + id;\n    infoBlock.style.position = \"relative\";\n    infoBlock.style.display = \"flex\";\n    infoBlock.style.alignItems = \"center\";\n    infoBlock.style.gap = \"6px\";\n    infoBlock.style.height = `${globalVariables_1.settings.guiScale * constants_1.INFO_BLOCK_SIZE}px`;\n    infoBlock.style.fontSize = `${globalVariables_1.settings.guiScale * constants_1.INFO_BLOCK_FONT_SIZE}px`;\n    infoBlock.style.padding = \"3px 6px\";\n    infoBlock.style.backgroundColor = \"rgba(0, 0, 0, 0.5)\";\n    infoBlock.style.borderRadius = \"5px\";\n    l(\"QIContainer\")?.appendChild(infoBlock);\n};\nexports.createInfoBlock = createInfoBlock;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initInfoContainer = void 0;\nconst initInfoContainer = () => {\n    const QIContainer = document.createElement(\"div\");\n    QIContainer.id = \"QIContainer\";\n    QIContainer.style.position = \"absolute\";\n    QIContainer.style.top = \"10px\";\n    QIContainer.style.left = \"10px\";\n    QIContainer.style.zIndex = \"1000\";\n    QIContainer.style.display = \"flex\";\n    QIContainer.style.flexDirection = \"column\";\n    QIContainer.style.alignItems = \"flex-start\";\n    QIContainer.style.justifyContent = \"center\";\n    QIContainer.style.gap = \"3px\";\n    QIContainer.style.fontWeight = \"bold\";\n    l(\"sectionLeft\")?.appendChild(QIContainer);\n};\nexports.initInfoContainer = initInfoContainer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applySettings = void 0;\nconst constants_1 = require(\"../../constants\");\nconst globalVariables_1 = require(\"../../globalVariables\");\nconst applySettings = () => {\n    if (globalVariables_1.settings.guiScale !== 1) {\n        const GCTimer = l(\"QI_GCTimer\");\n        if (GCTimer) {\n            GCTimer.style.height = `${globalVariables_1.settings.guiScale * constants_1.INFO_BLOCK_SIZE}px`;\n            GCTimer.style.fontSize = `${globalVariables_1.settings.guiScale * constants_1.INFO_BLOCK_FONT_SIZE}px`;\n        }\n    }\n    if (globalVariables_1.settings.hideOldBuffTImers) {\n        const buffsEl = l(\"buffs\");\n        if (!buffsEl)\n            return;\n        buffsEl.style.display = \"none\";\n    }\n};\nexports.applySettings = applySettings;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBooleanSettingsOption = void 0;\nconst globalVariables_1 = require(\"../../globalVariables\");\nconst createBooleanSettingsOption = (parent, setting) => {\n    const currentSettingValue = globalVariables_1.settings[setting.id];\n    const settingEl = document.createElement(\"a\");\n    settingEl.classList.add(\"smallFancyButton\", \"prefButton\", \"option\");\n    if (!currentSettingValue)\n        settingEl.classList.add(\"off\");\n    settingEl.innerHTML = `${setting.name} ${currentSettingValue ? \"ON\" : \"OFF\"}`;\n    const setSetting = (val) => {\n        globalVariables_1.settings[setting.id] = val;\n        settingEl.innerHTML = `${setting.name} ${val ? \"ON\" : \"OFF\"}`;\n        const action = val ? \"remove\" : \"add\";\n        settingEl.classList[action](\"off\");\n    };\n    settingEl.onclick = () => {\n        const newValue = !globalVariables_1.settings[setting.id];\n        setSetting(newValue);\n        PlaySound('snd/tick.mp3');\n        if (setting.onChange)\n            setting.onChange(newValue);\n    };\n    parent.appendChild(settingEl);\n    parent.appendChild(document.createElement(\"br\"));\n};\nexports.createBooleanSettingsOption = createBooleanSettingsOption;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSliderSettingOption = void 0;\nconst globalVariables_1 = require(\"../../globalVariables\");\nconst createSliderSettingOption = (parent, setting) => {\n    const currentSettingValue = globalVariables_1.settings[setting.id];\n    const settingEl = document.createElement(\"div\");\n    settingEl.className = \"sliderBox\";\n    const settingLabel = document.createElement(\"div\");\n    settingLabel.style.float = \"left\";\n    settingLabel.className = \"smallFancyButton\";\n    settingLabel.innerHTML = setting.name;\n    const settingValue = document.createElement(\"div\");\n    settingValue.style.float = \"right\";\n    settingValue.className = \"smallFancyButton\";\n    settingValue.innerHTML = setting.valueFormat?.replaceAll(\"{val}\", String(currentSettingValue));\n    const settingInput = document.createElement(\"input\");\n    settingInput.className = \"slider\";\n    settingInput.type = \"range\";\n    settingInput.min = String(setting.min);\n    settingInput.max = String(setting.max);\n    settingInput.step = String(setting.step);\n    settingInput.value = String(currentSettingValue !== undefined ? currentSettingValue : setting.default);\n    settingEl.appendChild(settingLabel);\n    settingEl.appendChild(settingValue);\n    settingEl.appendChild(settingInput);\n    const setSetting = (val) => {\n        globalVariables_1.settings[setting.id] = +val;\n        settingValue.innerHTML = setting.valueFormat?.replaceAll(\"{val}\", val);\n        if (setting.onChange)\n            setting.onChange(+val);\n    };\n    settingEl.onchange = () => {\n        setSetting(settingInput.value);\n        PlaySound('snd/tick.mp3');\n    };\n    settingEl.oninput = () => {\n        setSetting(settingInput.value);\n    };\n    parent.appendChild(settingEl);\n    parent.appendChild(document.createElement(\"br\"));\n};\nexports.createSliderSettingOption = createSliderSettingOption;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSettingsOption = void 0;\nconst createBooleanSettingsOption_1 = require(\"./createBooleanSettingsOption\");\nconst createSliderSettingOption_1 = require(\"./createSliderSettingOption\");\nconst createSettingsOption = (parent, setting) => {\n    if (setting.type === \"slider\") {\n        (0, createSliderSettingOption_1.createSliderSettingOption)(parent, setting);\n    }\n    else if (setting.type === \"boolean\") {\n        (0, createBooleanSettingsOption_1.createBooleanSettingsOption)(parent, setting);\n    }\n};\nexports.createSettingsOption = createSettingsOption;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckGCSpawn = void 0;\nconst globalVariables_1 = require(\"../globalVariables\");\nconst CheckGCSpawn = () => {\n    let hasNatGC = false;\n    Game.shimmers.forEach((shimmer) => {\n        if (shimmer.type === \"golden\" && shimmer.spawnLead) {\n            hasNatGC = true;\n            globalVariables_1.globalVars.GCnoSpawnChance = 1;\n        }\n    });\n    globalVariables_1.globalVars.natGCOnScreen = hasNatGC;\n};\nexports.CheckGCSpawn = CheckGCSpawn;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.replaceNativeHandlers = void 0;\nconst globalVariables_1 = require(\"../globalVariables\");\nconst settings_1 = require(\"../handlers/settings\");\nconst addCustomSettings = () => {\n    if (!l(\"menu\")?.childNodes?.length)\n        return;\n    const settingsEl = document.createElement(\"div\");\n    settingsEl.id = \"QISettings\";\n    settingsEl.className = \"subsection\";\n    const settingsTitle = document.createElement(\"div\");\n    settingsTitle.className = \"title\";\n    settingsTitle.innerHTML = \"Quick Info Settings\";\n    const settingsListing = document.createElement(\"div\");\n    settingsListing.className = \"listing\";\n    globalVariables_1.settingsOptions.forEach((settingsOption) => {\n        (0, settings_1.createSettingsOption)(settingsListing, settingsOption);\n    });\n    settingsEl.appendChild(settingsTitle);\n    settingsEl.appendChild(settingsListing);\n    l('menu')?.insertBefore(settingsEl, l('menu')?.childNodes[3] || null);\n};\nconst replaceNativeHandlers = () => {\n    const InitUpdateMenu = Game.UpdateMenu;\n    Game.UpdateMenu = () => {\n        InitUpdateMenu();\n        addCustomSettings();\n    };\n};\nexports.replaceNativeHandlers = replaceNativeHandlers;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateBuffsTimer = void 0;\nconst constants_1 = require(\"../constants\");\nconst globalVariables_1 = require(\"../globalVariables\");\nconst buff_1 = require(\"../utils/buff\");\nconst createInfoBlock_1 = require(\"../handlers/info/createInfoBlock\");\nconst UpdateBuffsTimer = () => {\n    Object.keys(Game.buffs).forEach((key) => {\n        const buff = Game.buffs[key];\n        if (!buff)\n            return;\n        const { time, multCpS, multClick } = buff;\n        const buffId = buff_1.BuffUtils.getId(buff);\n        const buffTime = Math.ceil(time / Game.fps);\n        const buffName = buff_1.BuffUtils.getName(buff);\n        const buffIcon = buff_1.BuffUtils.getIcon(buff);\n        const buffMult = (constants_1.MULT_CLICK_IDS.includes(buffId) ? multClick : multCpS) || 0;\n        const buffMultColor = buffMult > 1 ? \"rgb(2, 253, 2)\" : \"rgb(255, 42, 75)\";\n        if (!globalVariables_1.globalVars.buffTimers.find(b => b.id === buffId)) {\n            (0, createInfoBlock_1.createInfoBlock)(buffId);\n            globalVariables_1.globalVars.buffTimers.push({ id: buffId, key });\n        }\n        const buffEl = l(\"QI_\" + buffId);\n        if (!buffEl)\n            return;\n        buffEl.innerHTML = `\r\n      ${buffIcon}<span>${buffName}: ${buffTime}s</span> <span style=\"color: ${buffMultColor}; display: ${buffMult === 0 ? \"none\" : \"inline\"};\">x${parseFloat(buffMult.toFixed(1))}</span>\r\n    `;\n    });\n    if (globalVariables_1.globalVars.buffTimers.length > Object.keys(Game.buffs).length) {\n        let deletedId = \"\";\n        globalVariables_1.globalVars.buffTimers.forEach((buff, i) => {\n            if (!Object.keys(Game.buffs).includes(buff.key)) {\n                const buffEl = l(\"QI_\" + buff.id);\n                if (!buffEl)\n                    return;\n                buffEl.remove();\n                deletedId = buff.id;\n            }\n        });\n        globalVariables_1.globalVars.buffTimers = globalVariables_1.globalVars.buffTimers.filter(buff => buff.id !== deletedId);\n    }\n};\nexports.UpdateBuffsTimer = UpdateBuffsTimer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateGCTimer = void 0;\nconst globalVariables_1 = require(\"../globalVariables\");\nconst colorInterpolate_1 = require(\"../utils/colorInterpolate\");\nconst UpdateGCTimer = () => {\n    const minT = Game.shimmerTypes.golden.minTime;\n    const maxT = Game.shimmerTypes.golden.maxTime;\n    const difT = maxT - minT;\n    const t = Game.shimmerTypes.golden.time;\n    const timeToMin = Math.ceil((minT - t) / Game.fps);\n    const timeToMax = Math.ceil(Math.min(difT, maxT - t) / Game.fps);\n    const timerString = `${timeToMin > 0 ? `${timeToMin}+` : \"\"}${timeToMax}s`;\n    const chanceToSpawnTick = Math.max(0, (t - minT) / (maxT - minT)) ** 5;\n    globalVariables_1.globalVars.GCnoSpawnChance *= 1 - chanceToSpawnTick;\n    const GCChance = ((1 - globalVariables_1.globalVars.GCnoSpawnChance) * 100).toFixed(1);\n    const GCChanceColor = (0, colorInterpolate_1.colorInterpolate)([255, 42, 75], [2, 253, 2], Math.min(1, parseFloat(GCChance) / 50));\n    const GCTimer = l(\"QI_GCTimer\");\n    if (!GCTimer)\n        return;\n    if (globalVariables_1.globalVars.natGCOnScreen) {\n        GCTimer.innerHTML = `<span style=\"color: rgb(255, 255, 255);\">GC: On screen</span>`;\n        return;\n    }\n    GCTimer.innerHTML = `<span style=\"color: rgb(255, 255, 255);\">GC: ${timerString}</span> <span style=\"color: rgb(${GCChanceColor.toString()});\">${GCChance}%</span>`;\n};\nexports.UpdateGCTimer = UpdateGCTimer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BuffUtils = void 0;\nconst constants_1 = require(\"../constants\");\nconst globalVariables_1 = require(\"../globalVariables\");\nconst getId = (buff) => {\n    const { type: buffType, arg2 } = buff;\n    const { name: buffTypeName } = buffType;\n    const buffId = buffTypeName.includes(\"building\") ? `${buffTypeName}_${arg2}` : buffTypeName;\n    return buffId.replaceAll(\" \", \"_\");\n};\nconst getBuildingName = (buff) => {\n    const { arg2 } = buff;\n    if (arg2 === undefined)\n        return \"\";\n    return constants_1.BUILDING_NAMES[arg2];\n};\nconst getName = (buff) => {\n    let buffId = getId(buff);\n    let buffName;\n    if (!globalVariables_1.settings.shortBuffNames) {\n        buffName = buff?.name;\n    }\n    else if (buffId.includes(\"building_buff\")) {\n        buffName = \"BS\";\n    }\n    else if (buffId.includes(\"building_debuff\")) {\n        buffName = \"Rust\";\n    }\n    else {\n        buffName = constants_1.SHORT_BUFF_NAMES[buffId] || buff?.name;\n    }\n    if (globalVariables_1.settings.showBuildingName && buffId.includes(\"building\"))\n        buffName += ` (${getBuildingName(buff)})`;\n    return buffName;\n};\nconst getIcon = (buff) => {\n    const { icon } = buff;\n    const size = globalVariables_1.settings.guiScale * constants_1.ICON_SIZE;\n    const backgroundPos = `${-icon[0] * size}px ${-icon[1] * size}px`;\n    const backgroundSize = `${36 * size}px`;\n    return `\r\n    <div style=\"width: ${size}px; height: ${size}px; background-image: url(${constants_1.ICON_URL}); background-size: ${backgroundSize}; background-position: ${backgroundPos}\"></div>\r\n  `;\n};\nexports.BuffUtils = {\n    getId,\n    getName,\n    getIcon,\n    getBuildingName\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.colorInterpolate = void 0;\nconst colorInterpolate = (colorA, colorB, intval) => {\n    const color = [0, 0, 0];\n    return color.map((_, i) => Math.round(colorA[i] * (1 - intval) + colorB[i] * intval));\n};\nexports.colorInterpolate = colorInterpolate;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst globalVariables_1 = require(\"./globalVariables\");\nconst CheckGCSpawn_1 = require(\"./hooks/CheckGCSpawn\");\nconst ReplaceNativeHandlers_1 = require(\"./hooks/ReplaceNativeHandlers\");\nconst UpdateBuffsTimerHook_1 = require(\"./hooks/UpdateBuffsTimerHook\");\nconst UpdateGCTimerHook_1 = require(\"./hooks/UpdateGCTimerHook\");\nconst createInfoBlock_1 = require(\"./handlers/info/createInfoBlock\");\nconst initInfoContainer_1 = require(\"./handlers/info/initInfoContainer\");\nconst applySettings_1 = require(\"./handlers/settings/applySettings\");\nconst QIDrawHook = () => {\n    if (Game.drawT % Math.ceil(globalVariables_1.settings.updateFrequency / 2) !== 0)\n        return;\n    (0, UpdateGCTimerHook_1.UpdateGCTimer)();\n    if (Game.drawT % globalVariables_1.settings.updateFrequency !== 0)\n        return;\n    (0, CheckGCSpawn_1.CheckGCSpawn)();\n    (0, UpdateBuffsTimerHook_1.UpdateBuffsTimer)();\n};\nconst init = () => {\n    (0, initInfoContainer_1.initInfoContainer)();\n    (0, ReplaceNativeHandlers_1.replaceNativeHandlers)();\n    (0, createInfoBlock_1.createInfoBlock)(\"GCTimer\");\n    Game.registerHook(\"draw\", QIDrawHook);\n};\nconst save = () => {\n    return JSON.stringify(globalVariables_1.settings);\n};\nconst load = (dataStr) => {\n    const data = JSON.parse(dataStr);\n    Object.keys(data).forEach((key) => {\n        globalVariables_1.settings[key] = data[key];\n    });\n    (0, applySettings_1.applySettings)();\n};\nconst QIMod = {\n    init,\n    save,\n    load\n};\nGame.registerMod('QuickInfo', QIMod);\n"],"names":["Object","defineProperty","exports","value","BUILDING_NAMES","MULT_CLICK_IDS","SHORT_BUFF_NAMES","INFO_BLOCK_FONT_SIZE","INFO_BLOCK_SIZE","ICON_SIZE","ICON_URL","settingsOptions","settings","globalVars","constants_1","buffTimers","natGCOnScreen","GCnoSpawnChance","guiScale","updateFrequency","shortBuffNames","showBuildingName","hideOldBuffTImers","id","name","type","min","max","step","default","valueFormat","onChange","val","QIContainer","l","querySelectorAll","forEach","div","style","height","fontSize","buffsEl","display","createInfoBlock","globalVariables_1","infoBlock","document","createElement","position","alignItems","gap","padding","backgroundColor","borderRadius","appendChild","initInfoContainer","top","left","zIndex","flexDirection","justifyContent","fontWeight","applySettings","GCTimer","createBooleanSettingsOption","parent","setting","currentSettingValue","settingEl","classList","add","innerHTML","onclick","newValue","action","setSetting","PlaySound","createSliderSettingOption","className","settingLabel","float","settingValue","replaceAll","String","settingInput","undefined","onchange","oninput","createSettingsOption","createBooleanSettingsOption_1","createSliderSettingOption_1","CheckGCSpawn","hasNatGC","Game","shimmers","shimmer","spawnLead","replaceNativeHandlers","settings_1","InitUpdateMenu","UpdateMenu","childNodes","length","settingsEl","settingsTitle","settingsListing","settingsOption","insertBefore","addCustomSettings","UpdateBuffsTimer","buff_1","createInfoBlock_1","keys","buffs","key","buff","time","multCpS","multClick","buffId","BuffUtils","getId","buffTime","Math","ceil","fps","buffName","getName","buffIcon","getIcon","buffMult","includes","buffMultColor","find","b","push","buffEl","parseFloat","toFixed","deletedId","i","remove","filter","UpdateGCTimer","colorInterpolate_1","minT","shimmerTypes","golden","minTime","maxT","maxTime","difT","t","timeToMin","timerString","chanceToSpawnTick","GCChance","GCChanceColor","colorInterpolate","toString","buffType","arg2","buffTypeName","getBuildingName","icon","size","backgroundPos","backgroundSize","colorA","colorB","intval","map","_","round","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","CheckGCSpawn_1","ReplaceNativeHandlers_1","UpdateBuffsTimerHook_1","UpdateGCTimerHook_1","initInfoContainer_1","applySettings_1","QIDrawHook","drawT","QIMod","init","registerHook","save","JSON","stringify","load","dataStr","data","parse","registerMod"],"sourceRoot":""}